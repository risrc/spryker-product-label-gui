[
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Communication/Form/ProductLabelAggregateFormType.php",
        "description": "Method `Spryker\\Zed\\ProductLabelGui\\Communication\\Form\\ProductLabelAggregateFormType::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Communication/Form/ProductLabelFormType.php",
        "description": "Method `Spryker\\Zed\\ProductLabelGui\\Communication\\Form\\ProductLabelFormType::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Communication/Form/ProductLabelLocalizedAttributesFormType.php",
        "description": "Method `Spryker\\Zed\\ProductLabelGui\\Communication\\Form\\ProductLabelLocalizedAttributesFormType::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Communication/Form/RelatedProductFormType.php",
        "description": "Method `Spryker\\Zed\\ProductLabelGui\\Communication\\Form\\RelatedProductFormType::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToLocaleBridge.php",
        "description": "Bridges: Method `getLocaleCollection()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToLocaleBridge.php",
        "description": "Bridges: Type should be defined for param `idLocale` in method `Spryker\\Zed\\ProductLabelGui\\Dependency\\Facade\\ProductLabelGuiToLocaleBridge::getLocaleById()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToLocaleBridge.php",
        "description": "Bridges: Method `getLocaleById()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToLocaleBridge.php",
        "description": "Bridges: Method `getCurrentLocale()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToLocaleBridge.php",
        "description": "Bridges: Method `getCurrentLocaleName()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToLocaleInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `getLocaleById()`. Got `$idLocale` but expected to be `int $idLocale`. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToMoneyBridge.php",
        "description": "Bridges: Type should be defined for param `price` in method `Spryker\\Zed\\ProductLabelGui\\Dependency\\Facade\\ProductLabelGuiToMoneyBridge::fromInteger()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToPriceProductFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `sku` in method `Spryker\\Zed\\ProductLabelGui\\Dependency\\Facade\\ProductLabelGuiToPriceProductFacadeBridge::findPriceBySku()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToPriceProductFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `priceTypeName` in method `Spryker\\Zed\\ProductLabelGui\\Dependency\\Facade\\ProductLabelGuiToPriceProductFacadeBridge::findPriceBySku()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToPriceProductFacadeBridge.php",
        "description": "Bridges: Method `findPriceBySku()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToProductLabelBridge.php",
        "description": "Bridges: Type should be defined for param `idProductLabel` in method `Spryker\\Zed\\ProductLabelGui\\Dependency\\Facade\\ProductLabelGuiToProductLabelBridge::findLabelById()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToProductLabelBridge.php",
        "description": "Bridges: Method `findLabelById()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToProductLabelBridge.php",
        "description": "Bridges: Method `findAllLabels()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToProductLabelBridge.php",
        "description": "Bridges: Method `createLabel()` must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToProductLabelBridge.php",
        "description": "Bridges: Method `updateLabel()` must have `public function update<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToProductLabelBridge.php",
        "description": "Bridges: Type should be defined for param `idProductLabel` in method `Spryker\\Zed\\ProductLabelGui\\Dependency\\Facade\\ProductLabelGuiToProductLabelBridge::addAbstractProductRelationsForLabel()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToProductLabelBridge.php",
        "description": "Bridges: Method `addAbstractProductRelationsForLabel()` must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToProductLabelBridge.php",
        "description": "Bridges: Type should be defined for param `idProductLabel` in method `Spryker\\Zed\\ProductLabelGui\\Dependency\\Facade\\ProductLabelGuiToProductLabelBridge::removeAbstractProductRelationsForLabel()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToProductLabelBridge.php",
        "description": "Bridges: Method `removeAbstractProductRelationsForLabel()` must have `public function delete<DomainEntity>Collection(<DomainEntity>CollectionDeleteCriteriaTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToProductLabelBridge.php",
        "description": "Bridges: Method `removeLabel()` must have `public function delete<DomainEntity>Collection(<DomainEntity>CollectionDeleteCriteriaTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToProductLabelBridge.php",
        "description": "Bridges: Type should be defined for param `idProductLabel` in method `Spryker\\Zed\\ProductLabelGui\\Dependency\\Facade\\ProductLabelGuiToProductLabelBridge::findProductAbstractRelationsByIdProductLabel()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToProductLabelBridge.php",
        "description": "Bridges: Method `findProductAbstractRelationsByIdProductLabel()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductLabelGui/Dependency/Facade/ProductLabelGuiToProductLabelInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `removeAbstractProductRelationsForLabel()`. Method does not exist in parent. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    }
]
